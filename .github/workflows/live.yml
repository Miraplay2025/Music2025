name: Live Config

on:
  workflow_dispatch:
    inputs:
      stream_url:
        description: 'URL do Stream'
        required: true
        default: ''
      arquivos:
        description: 'Lista de arquivos'
        required: true
        default: ''
      rclone_conf:
        description: 'rclone.conf em Base64'
        required: true
        default: ''

jobs:
  run_live:
    runs-on: ubuntu-latest
    steps:
      - name: Exibir dados da Live
        run: |
          echo "🔗 URL Stream: ${{ github.event.inputs.stream_url }}"
          echo "📄 Caminhos dos arquivos:"
          echo "${{ github.event.inputs.arquivos }}"
          echo "🔐 rclone.conf (Base64):"
          echo "${{ github.event.inputs.rclone_conf }}"

      - name: Decodificar rclone.conf e exibir
        run: |
          echo "${{ github.event.inputs.rclone_conf }}" | base64 -d > rclone.conf
          echo "📁 Conteúdo decodificado do rclone.conf:"
          cat rclone.conf

  montar-video:
    runs-on: ubuntu-latest
    needs: run_live
    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: 📦 Instalar dependências
        run: |
          sudo apt update
          sudo apt install -y ffmpeg jq rclone git curl
          echo '{}' > package.json

      - name: 📄 Salvar rclone.conf
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ github.event.inputs.rclone_conf }}" | base64 -d > ~/.config/rclone/rclone.conf

      - name: 📝 Criar input.json para o script JS
        run: |
          echo "{\"stream_url\": \"${{ github.event.inputs.stream_url }}\", \"arquivos\": \"${{ github.event.inputs.arquivos }}\"}" > input.json

      - name: ▶️ Executar Music_unir.js
        run: |
          node Music_unir.js

      - name: 📤 Enviar vídeo final como artefato
        uses: actions/upload-artifact@v4
        with:
          name: video_final
          path: saida/video_final.mp4
